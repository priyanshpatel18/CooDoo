generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  displayName   String
  email         String          @unique
  password      String
  token         String?
  UserWorkspace UserWorkSpace[]
}

model Otp {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  otp        String
  verified   Boolean  @default(false)
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  forgotPass Boolean  @default(false)
}

model Workspace {
  id            Int             @id @default(autoincrement())
  workspaceName String
  UserWorkspace UserWorkSpace[]
  todos         Todo[]
}

model UserWorkSpace {
  id            Int        @id @default(autoincrement())
  userId        Int
  workspaceId   Int
  userIdFK      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspaceIdFK Workspace? @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}

model Todo {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  status      TodoStatus @default(PENDING)
  workspaceId Int
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
}

enum TodoStatus {
  PENDING
  PROGRESS
  COMPLETED
}

model UnverifiedUser {
  id          Int      @id @default(autoincrement())
  displayName String
  email       String   @unique
  password    String
  expiresAt   DateTime
}
